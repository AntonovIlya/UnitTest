package jvm;

// Подсистема загрузчиков классов загружает классы в Metaspace по мере выполнения кода: JvmComprehension, Object, Integer, System и другие системные классы
// Если классы не найдены, будет выброшено исключение ClassNotFoundException
// 1 Загрузка класса JvmComprehension
// 2 Связывание ссылок на другие классы внутри данного, запрос загрузкчику классов на загрузку остальных классов
// 3 Инициализация, выполнение статических методов, и статических полей


public class JvmComprehension {

    public static void main(String[] args) { // Создание области в стеке (фрейм) для записи информации о методе:
        int i = 1;                      // 4 создание переменной i в стеке, присваивание значения 1
        Object o = new Object();        // 5 выделение памятие под новый объект, создание объекта Object в куче, создание переменной o в стеке и присваивание ссылки на объект
        Integer ii = 2;                 // 6 выделение памяти, создание объекта, заполнение полей в куче (value = 2), создание переменной, присваивание ссылки
        printAll(o, i, ii);             // 7 создание нового фрейма
        System.out.println("finished"); // 12 удаление фрейма printAll, создание нового фрема аналогично п.10
    } // 13 удаление фрейма main
    // 14 По мере выполнения сборщик мусора собирает и удаляет объекты из кучи, которые больше не используются

    private static void printAll(Object o, int i, Integer ii) { // 8 создание двух ссылок на объекты, связывание объектов
        Integer uselessVar = 700;                   // 9 аналогично п.6, только ссылка создаётся в другом фрейме
        System.out.println(o.toString() + i + ii);  // 10 создание нового фрейма, создание новой переменной для строкового объекта, отработка метода
    } // 11 удаление фрейма
}
